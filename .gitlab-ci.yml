image: php:8.2-cli

services:
  - mysql:latest

variables:
  MYSQL_DATABASE: user_auth
  MYSQL_USER: root
  MYSQL_PASSWORD: root
  MYSQL_ROOT_PASSWORD: root

cache:
  paths:
    - vendor/
    - ~/.composer/cache

before_script:
  # Install required system dependencies
  - apt-get update && apt-get install -y unzip git mysql-client
  - php --version

  # Ensure a valid php.ini exists
  - cp /usr/local/etc/php/php.ini-development /usr/local/etc/php/php.ini

  # Wait for MySQL to be ready (using sleep as a basic solution)
  - until mysql -h mysql -u root -proot -e "SHOW DATABASES"; do echo "Waiting for MySQL..."; sleep 5; done

  # Import the database schema (db/database.sql) into MySQL
  - mysql -h mysql -u root -proot $MYSQL_DATABASE < db/database.sql

  # Insert sample rows into the database
  - mysql -h mysql -u root -proot $MYSQL_DATABASE -e "INSERT INTO users (username, email, password) VALUES ('user1', 'user1@example.com', 'password123');"
  - mysql -h mysql -u root -proot $MYSQL_DATABASE -e "INSERT INTO users (username, email, password) VALUES ('user2', 'user2@example.com', 'password456');"
  - mysql -h mysql -u root -proot $MYSQL_DATABASE -e "INSERT INTO users (username, email, password) VALUES ('user3', 'user3@example.com', 'password789');"

stages:
  - install
  - test
  - build

install_dependencies:
  stage: install
  script:
    - curl -sS https://getcomposer.org/installer | php
    - php composer.phar install --prefer-dist --no-progress --ignore-platform-reqs
  artifacts:
    paths:
      - vendor/

run_tests:
  stage: test
  script:
    - echo "Running tests..."
    # Example test to check if the users were inserted and can be fetched
    - php vendor/bin/phpunit --configuration phpunit.xml.dist
  only:
    - main

build:
  stage: build
  script:
    - echo "Building project..."
